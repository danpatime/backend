plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    // WEB SOCKET
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // MONGO DB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // ENV
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    // VALIDATION
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // SECURITY
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}
