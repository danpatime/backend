plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.5'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // WEB SOCKET
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // MONGO DB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // ENV
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    // VALIDATION
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // SECURITY
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // SMTP
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Query DSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // 인메모리 몽고디비 flapdoodle
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.6.0'

    // OAUTH2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // MOCKITO
    testImplementation "org.mockito:mockito-core:3.+"

    //WIREMOCK (외부 의존성 테스트용)
    implementation 'org.wiremock.integrations:wiremock-spring-boot:3.3.0'

    // ModelMapper 사용
    //객체 간 매핑 처리
    implementation 'org.modelmapper:modelmapper:3.1.0'


    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'
    //객체 간 매핑 처리
    implementation 'org.modelmapper:modelmapper:3.1.0'


    // OAUTH2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
}

tasks.named('test') {
    useJUnitPlatform()
}

def querydslDir = "build/generated/querydsl"

sourceSets {
    main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
    options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

clean.doLast {
    file(querydslDir).deleteDir()
}

sourceSets {
    test {
        java {
            srcDirs = ['src/test/java']
        }
    }
}